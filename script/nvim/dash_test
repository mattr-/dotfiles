#!/bin/bash
set -e

while getopts "cd" opt; do
  case $opt in
  c)
    clean=true
    ;;
  d)
    dev=true
    ;;
  s)
    use_starter=true
    ;;
  esac
done

DOCKER_OPTIONS=""
DOCKER_CONTAINER_NAME="dashvim_test"

if [ -n "$dev" ]; then
  LOCAL_SOURCE_DIR=$HOME/Code/mattr-/DashVim
  LOCAL_CONFIG_DIR=$HOME/.config/nvim
  DASHVIM_DOCKER_OPTIONS="--mount type=bind,src=$LOCAL_SOURCE_DIR,dst=/root/Code/mattr-/DashVim"
  if [ -n "$use_starter" ]; then
    LOCAL_CONFIG_OPTIONS="--mount type=bind,src=$LOCAL_CONFIG_DIR,dst=/root/.config/nvim"
  else
    LOCAL_CONFIG_OPTIONS=""
  fi
  DOCKER_OPTIONS="$DASHVIM_DOCKER_OPTIONS $LOCAL_CONFIG_OPTIONS"
  DOCKER_CONTAINER_NAME="dashvim_test_dev"
fi

if [ -n "$clean" ]; then
  docker container stop $(docker container ls -qa --filter name=$DOCKER_CONTAINER_NAME)
  docker container rm $(docker container ls -qa --filter name=$DOCKER_CONTAINER_NAME)
fi

if [ "$(docker container ls -aq --filter name=$DOCKER_CONTAINER_NAME)" != "" ]; then
  docker container start -ai $(docker container ls -qa --filter name=$DOCKER_CONTAINER_NAME)
else
  docker run -w /root $DOCKER_OPTIONS -it --name $DOCKER_CONTAINER_NAME alpine:edge sh -uelic '
    apk add bash curl git lazygit fd fzf neovim neovim-doc ripgrep alpine-sdk chezmoi ruby --update
    if [ ! -e ~/.config/nvim ]
    then
      git clone https://github.com/DashVim/starter ~/.config/nvim
    fi
    cd ~/.config/nvim
    nvim
  '
fi
