#!/bin/bash
set -e

CONTAINER_NAME=nvim_config_test

while getopts "cd" opt; do
  case $opt in
  c)
    clean=true
    ;;
  d)
    dev=true
    ;;
  esac
done

DOCKER_OPTIONS=""
DOCKER_CONTAINER_NAME="nvim_config_test"

if [ -n "$dev" ]; then
  # mount the local plugin directory in the right place and start the container
  LOCAL_SOURCE_DIR="$(chezmoi dump-config | jq -r .sourceDir)/home/dot_config/nvim"
  DOCKER_OPTIONS="--mount type=bind,src=$LOCAL_SOURCE_DIR,dst=/root/.config/nvim"
  DOCKER_CONTAINER_NAME="nvim_config_test_dev"
fi

if [ -n "$clean" ]; then
  docker container stop $(docker container ls -qa --filter name=$DOCKER_CONTAINER_NAME)
  docker container rm $(docker container ls -qa --filter name=$DOCKER_CONTAINER_NAME)
fi


if [ "$(docker container ls -aq --filter name=$DOCKER_CONTAINER_NAME)" != "" ]; then
  docker container start -ai $(docker container ls -qa --filter name=$DOCKER_CONTAINER_NAME)
else
  docker run -w /root $DOCKER_OPTIONS -it --name $DOCKER_CONTAINER_NAME alpine:edge sh -uelic '
    apk add bash curl git lazygit fd neovim neovim-doc ripgrep alpine-sdk chezmoi ruby --update
    if [ ! -e ~/.config/nvim ]
    then
      chezmoi init mattr- --apply
    fi
    cd ~/.config/nvim
    nvim
  '

fi
